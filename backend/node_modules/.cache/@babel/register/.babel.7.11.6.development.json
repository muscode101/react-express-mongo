{
  "{\"sourceRoot\":\"/home/muscode/WebstormProjects/js_fullstack_basics/backend/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/muscode/WebstormProjects/js_fullstack_basics/backend\",\"filename\":\"/home/muscode/WebstormProjects/js_fullstack_basics/backend/src/index.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/muscode/WebstormProjects/js_fullstack_basics/backend\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/muscode/WebstormProjects/js_fullstack_basics/backend/src/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/muscode/WebstormProjects/js_fullstack_basics/backend",
      "filename": "/home/muscode/WebstormProjects/js_fullstack_basics/backend/src/index.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/muscode/WebstormProjects/js_fullstack_basics/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/muscode/WebstormProjects/js_fullstack_basics/backend/src/index.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/muscode/WebstormProjects/js_fullstack_basics/backend/src/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/muscode/WebstormProjects/js_fullstack_basics/backend/src/",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _mongodb = _interopRequireDefault(require(\"mongodb\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar MongoClient = _mongodb[\"default\"].MongoClient;\nvar app = (0, _express[\"default\"])();\nvar PORT = 6000;\nvar url = 'mongodb://localhost:27017/';\nvar collection = null;\napp.use(_bodyParser[\"default\"].json());\napp.get('/', function (req, res) {\n  collection.find({}).toArray(function (error, articles) {\n    if (!error) {\n      res.status(200).json(articles);\n    } else {\n      res.status(500).send(\"error get data\", error);\n      console.log(error);\n    }\n  });\n});\napp.get('/api/articles/:name', function (req, res) {\n  var articleName = req.params.name;\n  collection.findOne({\n    name: articleName\n  }, function (error, article) {\n    if (error) {\n      res.status(500);\n      console.log(error);\n    }\n\n    res.status(200).json(article);\n    console.log(article);\n  });\n});\napp.post('/api/articles/:name/upvote', function (req, res) {\n  var articleName = req.params.name;\n  collection.findOne({\n    name: articleName\n  }, function (error, article) {\n    collection.updateOne({\n      name: articleName\n    }, {\n      $set: {\n        upvotes: article.upvotes + 1\n      }\n    }, function (error, result) {\n      error ? console.log(error) : collection.findOne({\n        name: articleName\n      }, function (error, article) {\n        error ? console.log(error) : console.log(article);\n        res.status(200).json(article);\n      });\n    });\n  });\n});\napp.post('/api/articles/:name/add-comment', function (req, res) {\n  var articleName = req.params.name;\n  var _req$body = req.body,\n      username = _req$body.username,\n      text = _req$body.text;\n  collection.updateOne({\n    name: articleName\n  }, {\n    $addToSet: {\n      comments: {\n        username: username,\n        text: text\n      }\n    }\n  }, function (error, result) {\n    collection.findOne({\n      name: articleName\n    }, function (error, updatedArticle) {\n      res.status(200).json(updatedArticle);\n    });\n  });\n});\nMongoClient.connect(url, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n}).then(function (client) {\n  console.log(\"connected correctly to server\");\n  var db = client.db('blog');\n  collection = db.collection('articles');\n  app.listen(PORT, function () {\n    return console.log(\"Listening on port \".concat(PORT));\n  });\n})[\"catch\"](function (error) {\n  console.log(error);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIk1vbmdvQ2xpZW50IiwiTW9uZ29kYiIsImFwcCIsIlBPUlQiLCJ1cmwiLCJjb2xsZWN0aW9uIiwidXNlIiwiYm9keVBhcnNlciIsImpzb24iLCJnZXQiLCJyZXEiLCJyZXMiLCJmaW5kIiwidG9BcnJheSIsImVycm9yIiwiYXJ0aWNsZXMiLCJzdGF0dXMiLCJzZW5kIiwiY29uc29sZSIsImxvZyIsImFydGljbGVOYW1lIiwicGFyYW1zIiwibmFtZSIsImZpbmRPbmUiLCJhcnRpY2xlIiwicG9zdCIsInVwZGF0ZU9uZSIsIiRzZXQiLCJ1cHZvdGVzIiwicmVzdWx0IiwiYm9keSIsInVzZXJuYW1lIiwidGV4dCIsIiRhZGRUb1NldCIsImNvbW1lbnRzIiwidXBkYXRlZEFydGljbGUiLCJjb25uZWN0IiwidXNlTmV3VXJsUGFyc2VyIiwidXNlVW5pZmllZFRvcG9sb2d5IiwidGhlbiIsImNsaWVudCIsImRiIiwibGlzdGVuIl0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUNBOztBQUNBOzs7O0lBRU9BLFcsR0FBZUMsbUIsQ0FBZkQsVztBQUNQLElBQU1FLEdBQUcsR0FBRywwQkFBWjtBQUNBLElBQU1DLElBQUksR0FBRyxJQUFiO0FBRUEsSUFBTUMsR0FBRyxHQUFHLDRCQUFaO0FBQ0EsSUFBSUMsVUFBVSxHQUFHLElBQWpCO0FBRUFILEdBQUcsQ0FBQ0ksR0FBSixDQUFRQyx1QkFBV0MsSUFBWCxFQUFSO0FBRUFOLEdBQUcsQ0FBQ08sR0FBSixDQUFRLEdBQVIsRUFBYSxVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUN2Qk4sRUFBQUEsVUFBVSxDQUFDTyxJQUFYLENBQWdCLEVBQWhCLEVBQ0tDLE9BREwsQ0FDYSxVQUFDQyxLQUFELEVBQVFDLFFBQVIsRUFBcUI7QUFDMUIsUUFBSSxDQUFDRCxLQUFMLEVBQVk7QUFDUkgsTUFBQUEsR0FBRyxDQUFDSyxNQUFKLENBQVcsR0FBWCxFQUFnQlIsSUFBaEIsQ0FBcUJPLFFB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LEtBQUQsRUFBUWUsTUFBUixFQUFtQjtBQUMxRHhCLElBQUFBLFVBQVUsQ0FBQ2tCLE9BQVgsQ0FBbUI7QUFBQ0QsTUFBQUEsSUFBSSxFQUFFRjtBQUFQLEtBQW5CLEVBQXdDLFVBQUNOLEtBQUQsRUFBUXFCLGNBQVIsRUFBMkI7QUFDL0R4QixNQUFBQSxHQUFHLENBQUNLLE1BQUosQ0FBVyxHQUFYLEVBQWdCUixJQUFoQixDQUFxQjJCLGNBQXJCO0FBQ0gsS0FGRDtBQUdILEdBTEw7QUFPSCxDQVhEO0FBYUFuQyxXQUFXLENBQUNvQyxPQUFaLENBQW9CaEMsR0FBcEIsRUFBeUI7QUFBQ2lDLEVBQUFBLGVBQWUsRUFBRSxJQUFsQjtBQUF3QkMsRUFBQUEsa0JBQWtCLEVBQUU7QUFBNUMsQ0FBekIsRUFDS0MsSUFETCxDQUNVLFVBQVVDLE1BQVYsRUFBa0I7QUFDcEJ0QixFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSwrQkFBWjtBQUNBLE1BQU1zQixFQUFFLEdBQUdELE1BQU0sQ0FBQ0MsRUFBUCxDQUFVLE1BQVYsQ0FBWDtBQUNBcEMsRUFBQUEsVUFBVSxHQUFHb0MsRUFBRSxDQUFDcEMsVUFBSCxDQUFjLFVBQWQsQ0FBYjtBQUNBSCxFQUFBQSxHQUFHLENBQUN3QyxNQUFKLENBQVd2QyxJQUFYLEVBQWlCO0FBQUEsV0FBTWUsT0FBTyxDQUFDQyxHQUFSLDZCQUFpQ2hCLElBQWpDLEVBQU47QUFBQSxHQUFqQjtBQUNILENBTkwsV0FNYSxVQUFVVyxLQUFWLEVBQWlCO0FBQzFCSSxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUwsS0FBWjtBQUNILENBUkQiLCJzb3VyY2VSb290IjoiL2hvbWUvbXVzY29kZS9XZWJzdG9ybVByb2plY3RzL2pzX2Z1bGxzdGFja19iYXNpY3MvYmFja2VuZC9zcmMvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcydcbmltcG9ydCBib2R5UGFyc2VyIGZyb20gJ2JvZHktcGFyc2VyJ1xuaW1wb3J0IE1vbmdvZGIgZnJvbSAnbW9uZ29kYidcblxuY29uc3Qge01vbmdvQ2xpZW50fSA9IE1vbmdvZGJcbmNvbnN0IGFwcCA9IGV4cHJlc3MoKVxuY29uc3QgUE9SVCA9IDYwMDBcblxuY29uc3QgdXJsID0gJ21vbmdvZGI6Ly9sb2NhbGhvc3Q6MjcwMTcvJ1xubGV0IGNvbGxlY3Rpb24gPSBudWxsXG5cbmFwcC51c2UoYm9keVBhcnNlci5qc29uKCkpXG5cbmFwcC5nZXQoJy8nLCAocmVxLCByZXMpID0+IHtcbiAgICBjb2xsZWN0aW9uLmZpbmQoe30pXG4gICAgICAgIC50b0FycmF5KChlcnJvciwgYXJ0aWNsZXMpID0+IHtcbiAgICAgICAgICAgIGlmICghZXJyb3IpIHtcbiAgICAgICAgICAgICAgICByZXMuc3RhdHVzKDIwMCkuanNvbihhcnRpY2xlcylcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgcmVzLnN0YXR1cyg1MDApLnNlbmQoXCJlcnJvciBnZXQgZGF0YVwiLCBlcnJvcilcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnJvcilcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcbn0pXG5cbmFwcC5nZXQoJy9hcGkvYXJ0aWNsZXMvOm5hbWUnLCAocmVxLCByZXMpID0+IHtcbiAgICBjb25zdCBhcnRpY2xlTmFtZSA9IHJlcS5wYXJhbXMubmFtZVxuICAgIGNvbGxlY3Rpb24uZmluZE9uZSh7bmFtZTogYXJ0aWNsZU5hbWV9LCAoZXJyb3IsIGFydGljbGUpID0+IHtcbiAgICAgICAgaWYgKGVycm9yKSB7XG4gICAgICAgICAgICByZXMuc3RhdHVzKDUwMClcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yKVxuICAgICAgICB9XG4gICAgICAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKGFydGljbGUpXG4gICAgICAgIGNvbnNvbGUubG9nKGFydGljbGUpXG4gICAgfSlcbn0pXG5cbmFwcC5wb3N0KCcvYXBpL2FydGljbGVzLzpuYW1lL3Vwdm90ZScsIChyZXEsIHJlcykgPT4ge1xuICAgIGxldCBhcnRpY2xlTmFtZSA9IHJlcS5wYXJhbXMubmFtZVxuXG4gICAgY29sbGVjdGlvbi5maW5kT25lKHtuYW1lOiBhcnRpY2xlTmFtZX0sIChlcnJvciwgYXJ0aWNsZSkgPT4ge1xuICAgICAgICBjb2xsZWN0aW9uLnVwZGF0ZU9uZSh7bmFtZTogYXJ0aWNsZU5hbWV9LFxuICAgICAgICAgICAgeyRzZXQ6IHt1cHZvdGVzOiBhcnRpY2xlLnVwdm90ZXMgKyAxfX0sIChlcnJvciwgcmVzdWx0KSA9PiB7XG4gICAgICAgICAgICAgICAgZXJyb3IgPyBjb25zb2xlLmxvZyhlcnJvcikgOlxuICAgICAgICAgICAgICAgICAgICBjb2xsZWN0aW9uLmZpbmRPbmUoe25hbWU6IGFydGljbGVOYW1lfSwgKGVycm9yLCBhcnRpY2xlKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBlcnJvciA/IGNvbnNvbGUubG9nKGVycm9yKSA6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coYXJ0aWNsZSlcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKGFydGljbGUpXG4gICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICB9KVxuICAgIH0pXG59KVxuXG5hcHAucG9zdCgnL2FwaS9hcnRpY2xlcy86bmFtZS9hZGQtY29tbWVudCcsIChyZXEsIHJlcykgPT4ge1xuICAgIGxldCBhcnRpY2xlTmFtZSA9IHJlcS5wYXJhbXMubmFtZVxuICAgIGxldCB7dXNlcm5hbWUsIHRleHR9ID0gcmVxLmJvZHlcblxuICAgIGNvbGxlY3Rpb24udXBkYXRlT25lKHtuYW1lOiBhcnRpY2xlTmFtZX0sXG4gICAgICAgIHskYWRkVG9TZXQ6IHtjb21tZW50czoge3VzZXJuYW1lLCB0ZXh0fX19LCAoZXJyb3IsIHJlc3VsdCkgPT4ge1xuICAgICAgICAgICAgY29sbGVjdGlvbi5maW5kT25lKHtuYW1lOiBhcnRpY2xlTmFtZX0sIChlcnJvciwgdXBkYXRlZEFydGljbGUpID0+IHtcbiAgICAgICAgICAgICAgICByZXMuc3RhdHVzKDIwMCkuanNvbih1cGRhdGVkQXJ0aWNsZSlcbiAgICAgICAgICAgIH0pXG4gICAgICAgIH0pXG5cbn0pXG5cbk1vbmdvQ2xpZW50LmNvbm5lY3QodXJsLCB7dXNlTmV3VXJsUGFyc2VyOiB0cnVlLCB1c2VVbmlmaWVkVG9wb2xvZ3k6IHRydWV9KVxuICAgIC50aGVuKGZ1bmN0aW9uIChjbGllbnQpIHtcbiAgICAgICAgY29uc29sZS5sb2coXCJjb25uZWN0ZWQgY29ycmVjdGx5IHRvIHNlcnZlclwiKVxuICAgICAgICBjb25zdCBkYiA9IGNsaWVudC5kYignYmxvZycpXG4gICAgICAgIGNvbGxlY3Rpb24gPSBkYi5jb2xsZWN0aW9uKCdhcnRpY2xlcycpXG4gICAgICAgIGFwcC5saXN0ZW4oUE9SVCwgKCkgPT4gY29uc29sZS5sb2coYExpc3RlbmluZyBvbiBwb3J0ICR7UE9SVH1gKSlcbiAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmxvZyhlcnJvcilcbn0pIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "MongoClient",
        "Mongodb",
        "app",
        "PORT",
        "url",
        "collection",
        "use",
        "bodyParser",
        "json",
        "get",
        "req",
        "res",
        "find",
        "toArray",
        "error",
        "articles",
        "status",
        "send",
        "console",
        "log",
        "articleName",
        "params",
        "name",
        "findOne",
        "article",
        "post",
        "updateOne",
        "$set",
        "upvotes",
        "result",
        "body",
        "username",
        "text",
        "$addToSet",
        "comments",
        "updatedArticle",
        "connect",
        "useNewUrlParser",
        "useUnifiedTopology",
        "then",
        "client",
        "db",
        "listen"
      ],
      "mappings": "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",
      "sourceRoot": "/home/muscode/WebstormProjects/js_fullstack_basics/backend/src/",
      "sourcesContent": [
        "import express from 'express'\nimport bodyParser from 'body-parser'\nimport Mongodb from 'mongodb'\n\nconst {MongoClient} = Mongodb\nconst app = express()\nconst PORT = 6000\n\nconst url = 'mongodb://localhost:27017/'\nlet collection = null\n\napp.use(bodyParser.json())\n\napp.get('/', (req, res) => {\n    collection.find({})\n        .toArray((error, articles) => {\n            if (!error) {\n                res.status(200).json(articles)\n            } else {\n                res.status(500).send(\"error get data\", error)\n                console.log(error)\n            }\n        })\n})\n\napp.get('/api/articles/:name', (req, res) => {\n    const articleName = req.params.name\n    collection.findOne({name: articleName}, (error, article) => {\n        if (error) {\n            res.status(500)\n            console.log(error)\n        }\n        res.status(200).json(article)\n        console.log(article)\n    })\n})\n\napp.post('/api/articles/:name/upvote', (req, res) => {\n    let articleName = req.params.name\n\n    collection.findOne({name: articleName}, (error, article) => {\n        collection.updateOne({name: articleName},\n            {$set: {upvotes: article.upvotes + 1}}, (error, result) => {\n                error ? console.log(error) :\n                    collection.findOne({name: articleName}, (error, article) => {\n                        error ? console.log(error) :\n                            console.log(article)\n                        res.status(200).json(article)\n                    })\n            })\n    })\n})\n\napp.post('/api/articles/:name/add-comment', (req, res) => {\n    let articleName = req.params.name\n    let {username, text} = req.body\n\n    collection.updateOne({name: articleName},\n        {$addToSet: {comments: {username, text}}}, (error, result) => {\n            collection.findOne({name: articleName}, (error, updatedArticle) => {\n                res.status(200).json(updatedArticle)\n            })\n        })\n\n})\n\nMongoClient.connect(url, {useNewUrlParser: true, useUnifiedTopology: true})\n    .then(function (client) {\n        console.log(\"connected correctly to server\")\n        const db = client.db('blog')\n        collection = db.collection('articles')\n        app.listen(PORT, () => console.log(`Listening on port ${PORT}`))\n    }).catch(function (error) {\n    console.log(error)\n})"
      ]
    },
    "sourceType": "script",
    "mtime": 1602067013505
  }
}